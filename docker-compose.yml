version: "3.7"

services:
    backend:
        build: 
            context: ./backend
            dockerfile: ./build/Dockerfile.backend
        deploy:
            resources:
                limits:
                    memory: '500M'
        hostname: bookspider_backend
        volumes:
            - ./bin/database:/database
            - ./bin/log:/log
            - /mnt/addition/download/Books:/books
            - ./backend/config:/config
            - ./backend/migrations:/migrations
        env_file:
            - .env
            - ./backend/assets/.env
        networks:
            - router
            - database
        profiles:
            - all
            - backend
            - web
        ports:
            - 9105:9105
        command: sh -c "./backend > /log/backend.log 2>&1"

    frontend:
        image: "flutter:stable"
        deploy:
            resources:
                limits:
                    memory: '1G'
        volumes:
            - frontend_volume:/build/web
            - ./frontend/src:/usr/src/app
        networks:
            - router
        profiles:
            - all
            - frontend
            - web
        env_file:
            - ./.env
        command: sh -c "flutter --version ; flutter pub get ; flutter build web --base-href $NOVEL_SPIDER_FE_ROUTE_PREFIX/ --dart-define=NOVEL_SPIDER_API_HOST=$NOVEL_SPIDER_API_HOST --dart-define=NOVEL_SPIDER_API_ROUTE_PREFIX=$NOVEL_SPIDER_API_ROUTE_PREFIX --dart-define=NOVEL_SPIDER_FE_ROUTE_PREFIX=$NOVEL_SPIDER_FE_ROUTE_PREFIX"
    
    batch:
        build: 
            context: ./backend
            dockerfile: ./build/Dockerfile.batch
        deploy:
            resources:
                limits:
                    cpus: '3.0'
                    memory: '3G'
        volumes:
            - ./bin/log:/log
            - /mnt/addition/download/Books:/books
            - ./bin/backup:/backup
            - ./backend/config:/config
            - ./backend/assets/api_parser:/api_parser
            - ./backend/migrations:/migrations
        env_file:
            - ./backend/assets/.env
            - .env
        networks:
            - database
        profiles:
            - all
            - batch
        command: sh -c "crond && tail -f /dev/null"

    console:
        build: 
            context: ./backend
            dockerfile: ./build/Dockerfile.console
        deploy:
            resources:
                limits:
                    cpus: '3.0'
                    memory: '3G'
        volumes:
            - ./bin/log:/log
            - /mnt/addition/download/Books:/books
            - ./bin/backup:/backup
            - ./backend/config:/config
            - ./backend/assets/api_parser:/api_parser
            - ./backend/migrations:/migrations
        env_file:
            - ./backend/assets/.env
            - .env
        networks:
            - database
        profiles:
            - all
            - console
        command: sh -c "./console --operation ${command} ${params} >> /log/console.log 2>&1"

volumes:
    frontend_volume:
        name: novel_frontend_volume

networks:
    router:
        driver: bridge
        name: router
    default:
    database:
        name: database
        external: true